workspace:
  base: /srv/app
  path: src/github.com/gopad/gopad-ui

branches:
  - master

pipeline:
  cache-restore:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    restore: true
    when:
      local: false

  frontend-prepare:
    image: webhippie/nodejs:latest
    pull: true
    commands:
      - yarn install --frozen-lockfile

  frontend-lint:
    image: webhippie/nodejs:latest
    pull: true
    group: frontend
    commands:
      - yarn lint

  frontend-test:
    image: webhippie/nodejs:latest
    pull: true
    group: frontend
    commands:
      - yarn test

  frontend-build:
    image: webhippie/nodejs:latest
    pull: true
    group: frontend
    commands:
      - yarn build

  backend-prepare:
    image: webhippie/golang:edge
    pull: true
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make clean
      - make retool
      - make generate

  backend-vet:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make vet

  backend-check:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make megacheck

  backend-lint:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make lint

  backend-test:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make test

  backend-build:
    image: webhippie/golang:edge
    pull: true
    group: backend
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make build

  backend-windows:
    image: karalabe/xgo-latest:latest
    pull: true
    group: release
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-dirs release-windows
    when:
      event: [ push, tag ]
      branch: master

  backend-linux:
    image: karalabe/xgo-latest:latest
    pull: true
    group: release
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-dirs release-linux
    when:
      event: [ push, tag ]
      branch: master

  backend-darwin:
    image: karalabe/xgo-latest:latest
    pull: true
    group: release
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-dirs release-darwin
    when:
      event: [ push, tag ]
      branch: master

  backend-finish:
    image: webhippie/golang:edge
    pull: true
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make release-copy release-check
    when:
      event: [ push, tag ]
      branch: master

  docker-amd64:
    image: plugins/docker:17.05
    pull: true
    group: docker
    secrets: [ docker_username, docker_password ]
    repo: gopad/gopad-ui
    auto_tag: true
    when:
      event: [push, tag]
      branch: master

  docker-i386:
    image: plugins/docker:17.05
    pull: true
    group: docker
    secrets: [ docker_username, docker_password ]
    repo: gopad/gopad-ui
    dockerfile: Dockerfile.i386
    auto_tag: true
    auto_tag_suffix: i386
    when:
      event: [push, tag]
      branch: master

  docker-arm:
    image: plugins/docker:17.05
    pull: true
    group: docker
    secrets: [ docker_username, docker_password ]
    repo: gopad/gopad-ui
    dockerfile: Dockerfile.arm
    auto_tag: true
    auto_tag_suffix: arm
    when:
      event: [push, tag]
      branch: master

  docker-arm64:
    image: plugins/docker:17.05
    pull: true
    group: docker
    secrets: [ docker_username, docker_password ]
    repo: gopad/gopad-ui
    dockerfile: Dockerfile.arm64
    auto_tag: true
    auto_tag_suffix: arm64
    when:
      event: [push, tag]
      branch: master

  docker-microbadger:
    image: plugins/webhook:1
    pull: true
    secrets:
      - source: microbadger_token
        target: plugin_urls
    when:
      event: [ push, tag ]
      branch: master

  cache-rebuild:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    rebuild: true
    mount:
      - _tools/bin
      - _tools/pkg
      - node_modules
    when:
      local: false
      event: [ push ]
      branch: master

  cache-flush:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    flush: true
    flush_age: 14
    when:
      local: false
      event: [ push ]
      branch: master

  archive-release:
    image: plugins/s3:1
    pull: true
    secrets: [ s3_endpoint, aws_access_key_id, aws_secret_access_key, s3_bucket ]
    source: dist/release/*
    target: /gopad/ui/master
    strip_prefix: dist/release/
    path_style: true
    when:
      event: [ push ]
      branch: master

  archive-release:
    image: plugins/s3:1
    pull: true
    secrets: [ s3_endpoint, aws_access_key_id, aws_secret_access_key, s3_bucket ]
    source: dist/release/*
    target: /gopad/ui/${DRONE_TAG##v}
    strip_prefix: dist/release/
    path_style: true
    when:
      event: [ tag ]
      branch: master

  github-release:
    image: plugins/github-release:1
    pull: true
    secrets: [ github_token ]
    files:
      - dist/release/*
    when:
      event: [ tag ]
      branch: master

  notify-matrix:
    image: plugins/matrix:1
    pull: true
    secrets: [ matrix_roomid, matrix_userid, matrix_accesstoken ]
    when:
      local: false
      events: [ push, tag ]
      status: [ changed, failure ]
